// index.html

<!DOCTYPE html><html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Elite Tips 2025</title>
    <link rel="manifest" href="/manifest.json" />
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>// src/main.jsx import React from "react"; import ReactDOM from "react-dom/client"; import App from "./App"; import "./index.css";

ReactDOM.createRoot(document.getElementById("root")).render( <React.StrictMode> <App /> </React.StrictMode> );

// src/App.jsx import React from "react"; import { BrowserRouter as Router, Route, Routes } from "react-router-dom"; import Home from "./pages/Home"; import Login from "./pages/Login"; import Dashboard from "./pages/Dashboard";

function App() { return ( <Router> <Routes> <Route path="/" element={<Home />} /> <Route path="/login" element={<Login />} /> <Route path="/dashboard" element={<Dashboard />} /> </Routes> </Router> ); }

export default App;

// src/firebaseConfig.js import { initializeApp } from "firebase/app"; import { getAuth } from "firebase/auth"; import { getFirestore } from "firebase/firestore";

const firebaseConfig = { apiKey: "YOUR_API_KEY", authDomain: "YOUR_AUTH_DOMAIN", projectId: "YOUR_PROJECT_ID", storageBucket: "YOUR_STORAGE_BUCKET", messagingSenderId: "YOUR_MESSAGING_SENDER_ID", appId: "YOUR_APP_ID", };

const app = initializeApp(firebaseConfig); export const auth = getAuth(app); export const db = getFirestore(app);

// src/pages/Home.jsx import React from "react"; import { Link } from "react-router-dom";

const Home = () => (

  <div>
    <h1>Welcome to Elite Tips 2025</h1>
    <Link to="/login">Login</Link>
  </div>
);export default Home;

// src/pages/Login.jsx import React, { useState } from "react"; import { auth } from "../firebaseConfig"; import { signInWithEmailAndPassword } from "firebase/auth"; import { useNavigate } from "react-router-dom";

const Login = () => { const [email, setEmail] = useState(""); const [password, setPassword] = useState(""); const navigate = useNavigate();

const login = async () => { try { await signInWithEmailAndPassword(auth, email, password); navigate("/dashboard"); } catch (error) { alert("Login failed"); } };

return ( <div> <input type="email" value={email} onChange={(e) => setEmail(e.target.value)} placeholder="Email" /> <input type="password" value={password} onChange={(e) => setPassword(e.target.value)} placeholder="Password" /> <button onClick={login}>Login</button> </div> ); };

export default Login;

// src/pages/Dashboard.jsx import React, { useEffect, useState } from "react"; import { db } from "../firebaseConfig"; import { collection, onSnapshot } from "firebase/firestore";

const Dashboard = () => { const [tips, setTips] = useState([]);

useEffect(() => { const unsubscribe = onSnapshot(collection(db, "predictions"), (snapshot) => { const data = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() })); setTips(data); }); return () => unsubscribe(); }, []);

return ( <div> <h2>Predictions</h2> <ul> {tips.map((tip) => ( <li key={tip.id}>{tip.title}: {tip.description}</li> ))} </ul> </div> ); };

export default Dashboard;

// manifest.json { "short_name": "EliteTips", "name": "Elite Tips 2025", "icons": [ { "src": "icon-192.png", "type": "image/png", "sizes": "192x192" }, { "src": "icon-512.png", "type": "image/png", "sizes": "512x512" } ], "start_url": ".", "display": "standalone", "theme_color": "#000000", "background_color": "#ffffff" }

// .firebaserc { "projects": { "default": "elitetips-a0a0d" } }

// firebase.json { "hosting": { "public": "build", "ignore": [ "firebase.json", "/.*", "/node_modules/" ], "rewrites": [ { "source": "", "destination": "/index.html" } ] } }

// .gitignore /node_modules /build /.env .DS_Store
